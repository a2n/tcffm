--- Log opened 四 12月 19 00:00:04 2013
--- Day changed 四 12月 19 2013
00:00 < guildwar> 只是前面多了一些空白吧
00:00 < guildwar> <title>
00:00 <@haroldwu> 不對啊，這樣正則應該會抓到
00:00 <@haroldwu> (.*)不是所有東西的意思？
00:00 < guildwar> [ ]*
00:00 <@haroldwu> 不過你可以立刻留言給 max 大了
00:01 < guildwar> 我也不確定 :)
00:10 < guildwar> 對喔，來留言
00:11 < guildwar> 不對，我先試試再說 :)
00:16 < guildwar> 還是打指令方便 XD
00:58 <@haroldwu> http://yfwu.github.io/%E6%8A%80%E8%A1%93/2013/12/16/python-script-useful-features.html
00:58 < bot_tcffm> haroldwu - 有助於撰寫 python 腳本(script)的技巧
09:17 < a2n> haroldwu: 昨天的 regex 失效，還沒想出正確的方式。 :P
09:18 < a2n> haroldwu: 試試 <title>([\s\S]*)</title>
09:18 < a2n> 也是取 \1
09:21 [Users #tcffm]
09:21 [@haroldwu] [ bot_tcffm] [ dominicletz] [ hmchen] [ op_logbot_] [ tcffm_bot_new   ] 
09:21 [ a2n     ] [ darkx    ] [ guildwar   ] [ Luxun ] [ OtomeSound] [ tcffm_logger_bot] 
09:21 -!- Irssi: #tcffm: Total of 12 nicks [1 ops, 0 halfops, 0 voices, 11 normal]
11:23 <@haroldwu> 哪裏失敗了？你是指imgur那個嗎？
11:23 < a2n> haroldwu: yes
11:24 <@haroldwu> ok我改改
11:31 <@haroldwu> bot_tcffm: 你好
11:31 < bot_tcffm> haroldwu 我是你的好朋友，一隻機器人
11:31 <@haroldwu> http://imgur.com/nFJoQt8
11:31 < bot_tcffm> haroldwu -
11:32 <@haroldwu> a2n: 結果是這樣噢
11:32 <@haroldwu> http://yfwu.github.io/%E6%8A%80%E8%A1%93/2013/12/16/python-script-useful-features.html
11:32 < bot_tcffm> haroldwu - 有助於撰寫 python 腳本(script)的技巧
11:36 < a2n> haroldwu: 新方法；先把 \n 移除，接著用昨天的 regex 取 \1。\n 在這裡沒用處，拿掉算了
11:37 <@haroldwu> 你說網頁內容內的\n 嗎？
11:37 < a2n> 但是那個 imgur 還有 \s，也要先拿掉。
11:37 <@haroldwu> ok
11:37 < a2n> haroldwu: <title>\n\s\s\s\s</title>
11:38 <@haroldwu> 額，不太懂
11:41 < a2n> 你把 <title> ... </title> 複製到 editor 觀察，共有四行，Line 2 & 3 是空白和換行組成的，這個可以拿掉。
11:42 <@haroldwu> 我用python的strip來去掉他們噢
11:43 < a2n> yes
11:44 < a2n> 先洗淨在比對 :D
11:48 <@haroldwu> return regex.search(urllib2.urlopen(url).read().strip('\n').strip('\s').group()[7:-8]
11:48 <@haroldwu> 少了一個)
11:48 <@haroldwu> return regex.search(urllib2.urlopen(url).read().strip('\n').strip('\s')).group()[7:-8]
11:52 <@haroldwu> bot_tcffm: 你好
11:52 < bot_tcffm> haroldwu 我是你的好朋友，一隻機器人
11:52 <@haroldwu> http://imgur.com/nFJoQt8
11:52 < bot_tcffm> haroldwu -
11:52 <@haroldwu> http://imgur.com/nFJoQt8
11:52 < bot_tcffm> haroldwu -
11:53 <@haroldwu> http://www.ibm.com/developerworks/cn/linux/l-cn-nohup/index.html
11:53 < bot_tcffm> haroldwu - Linux 技巧：让进程在后台可靠运行的几种方法
11:53 <@haroldwu> a2n: No Good, Bob.
11:59 < a2n> haroldwu: 先把 return regex.search(urllib2.urlopen(url).read().strip('\n').strip('\s')) 印出來
11:59  * a2n 不熟 python syntax
12:06 <@haroldwu> 嗯嗯，我在思考是哪裏有問題，我來看看imgur的html
12:06  * haroldwu 到現在還沒看:P
12:07 <@haroldwu> http://imgur.com/gallery/2jC473T
12:07 < bot_tcffm> haroldwu -
12:07 <@haroldwu> <title>
12:07 <@haroldwu> I was inspired by my girlfriend on this one! - Imgur
12:07 <@haroldwu> </title>
12:08 <@haroldwu> 恩，如果把斷行符號去掉應該就好才對
12:10 <@haroldwu> 原本有個 <title>([^<]+)</title> 跟你的差異在哪呢？
13:20 < guildwar> a2n: 我研究了一下昨天說的 docker.io 的 vagrant 及 virtualbox
13:21 < guildwar> docker.io 的確是只支援 lxc，而當中說的 vagrant 及 virtualbox 是用來在 ubuntu 上準備一個 docker 的環境來使用而已
13:22 < guildwar> 因為 docker 有用到 aufs，而 aufs 一直沒無法進 linus 官方 kernel tree，所以要準備一個 docker 的環境還是有點麻煩
13:23 < guildwar> 所以教大家在 ubuntu 下裝個 virtualbox 虛擬機器來試用 docker.io
13:24 < guildwar> http://docs.docker.io/en/latest/installation/vagrant/
13:24 < bot_tcffm> guildwar - Using Vagrant (Mac, Linux) - Docker Documentation
13:30 < guildwar> http://mozlinks-zh.blogspot.tw/2013/10/BrowserID.html
13:30 < bot_tcffm> guildwar - Mozilla Links 正體中文版: 讓我們來解釋一下什麼是 Browser ID
13:31 < a2n_afk> haroldwu: 還不知道 < 的意思
13:32 < guildwar> 另外看到一篇 persona (原本叫 browser id） 介紹，很容易把 persona 和 openid 給搞混，所以看看吧
13:32 < a2n_afk> guildwar: 原來是 osx 上準備 docker 環境呀
13:38 < brli> 其實systemd-nspawn也可以講一些東西@@
13:38 < brli> 不過我也只是入門而已，還無法做出花俏的應用
13:39 < guildwar> brli: 是什麼功用呢?
13:40 < brli> 做出一個OS容器，然後在host直接開機進去
13:41 < guildwar> 不錯玩的樣子 :)
13:41 < brli> 看一些文章是說甚至可以做成對ssh-socket反應而自動開機的systemd.service，這樣可以拿來當隔離host的web server
13:42 < brli> 而且因為沒反應就關機，有反應就開機，也可以降低系統的負載之類的
13:42 < brli> ↑以上是花俏應用
13:43 < brli> 現在只是單純的作為隔離措施來建造打包環境而已XD
13:43 < guildwar> 那有 lxc 就好了，為什麼要多一個 systemd-spawn? 和 systemd 整合比較好嗎?
13:44 < brli> 大概吧XD
13:45 < brli> guildwar: https://www.youtube.com/watch?v=s7LlUs5D9p4
13:45 < bot_tcffm> brli - Systemd-Nspawn is Chroot on Steroids - Lennart Poettering, Red Hat - YouTube
13:45 < brli> 有稍微點到其中的差別
13:46 < brli> http://youtu.be/s7LlUs5D9p4?t=4m56s
13:46 < bot_tcffm> brli - Systemd-Nspawn is Chroot on Steroids - Lennart Poettering, Red Hat - YouTube
13:46 < brli> 不過扯的有點遠而且抓不到重點就是了XD
13:47 < guildwar> 收到，來研究看看，感謝
15:01 < guildwar> 我想到了，systemd-nspawn 是不是用來讓同一台電腦，第二個人登入，進入一個隔離環境，比較安全，不像之前用 guest 帳號登入，還是在同一系統
15:03 < guildwar> 是指實體 console 前的登入
15:13 <@haroldwu> bot_tcffm: 你好
15:14 < bot_tcffm> haroldwu 我是你的好朋友，一隻機器人
15:14 <@haroldwu> http://imgur.com/nFJoQt8
15:14 < bot_tcffm> haroldwu -                         imgur: the simple image sharer
15:14 <@haroldwu> https://www.youtube.com/watch?v=s7LlUs5D9p4
15:14 < bot_tcffm> haroldwu - Systemd-Nspawn is Chroot on Steroids - Lennart Poettering, Red Hat - YouTube
15:17 <@haroldwu> http://imgur.com/nFJoQt8
15:17 < bot_tcffm> haroldwu -                         imgur: the simple image sharer
15:17 <@haroldwu> https://www.youtube.com/watch?v=s7LlUs5D9p4
15:17 < bot_tcffm> haroldwu - Systemd-Nspawn is Chroot on Steroids - Lennart Poettering, Red Hat - YouTube
15:17 <@haroldwu> 啥原因呢。。。
15:18 < guildwar> 這樣結果不對嗎？ title 不是有出來了
15:19 < guildwar> 哦，是指那個 imgur 的
15:19 <@haroldwu> 一大段空白
15:19 <@haroldwu> 我把\n濾掉了
15:22 <@haroldwu> 算了，能顯示就好 :P
15:23 < guildwar> 也是 :)  just work
15:46 < a2n> s/^(\s)+$//g 把空白行去掉
15:51 <@haroldwu> 唔，所以改成 <title>s/^(\s)+$//g</title> 嗎？
15:51 <@haroldwu> 唉，正則不懂，做事不利
15:52 < guildwar> 中肯
15:53 < guildwar> 正則一出，誰與爭鋒
15:55 <@haroldwu> 大概 bash script 可以跟正則爭下效率提升之王的寶座
15:58 < brli> bash vs python 何？
15:59 <@haroldwu> 我自己是都用 python 作 bash 的事...
15:59 <@haroldwu> 不過我決定論簡潔的話，perl 更適合拿來替代 bash
15:59 <@haroldwu> 決定 => 覺得
16:07 <@haroldwu> #sitcon 人好少...
16:07 <@haroldwu> 觀察下，#perl.tw 很多帳號熟面孔了 XD
16:07 <@haroldwu> #coscup #hitcon 冷清中，看來非活動期沒什麼焦點
16:08 <@haroldwu> #g0v 無時無刻都很熱鬧 XDD
16:40 -!- mode/#tcffm [+o haroldwu] by ChanServ
16:41 -!- mode/#tcffm [+o haroldwu] by ChanServ
16:43 < a2n> haroldwu: 不是，是先用 python regex 去掉空白行，接著在取出目標
16:43 <@haroldwu> 這樣速度會不會變慢 :P
17:15 < a2n> 是啊，多慢呢？2 ns :P
17:16 <@haroldwu> 好吧 XD 我試試
17:17 < a2n> 五洲製藥原則：先講求不傷身，再講求效果。軟體開發原則：先講求正確，再講求效能。
17:23 <@haroldwu> 有了，在python 中要是用正則替換，用 re.sub(條件,目標,對象)
17:26 <@haroldwu> 例如這裏是 re.sub('^(\s)+$/','',urllib2.open(url).read()) 取得完整的，沒有空行的文本
17:26 <@haroldwu> 然後去除 \n 的話，用 replace，所以組合起來是
17:27 <@haroldwu> regexp.search(re.sub('^(\s)+$/','',urllib2.open(url).read()).replace('\n','').group()[7,-9]
17:27  * haroldwu 不寫註解的話，半年後光我自己就看不懂這是三小了 XDD
17:29 <@haroldwu> 唔，repcale放到外面了，應該在 search() 裏面
17:36 <@haroldwu> a2n 我懂了，只要把前後的空白去掉就ok了=.=
17:36 <@haroldwu> 不用那麼複雜 :P
17:38 < a2n> 寫好我幫你重構，你的代碼太糾結了。重構也是 levels up 任務之一 :D
17:39 <@haroldwu> http://imgur.com/gallery/d0Unc3s
17:39 < bot_tcffm> haroldwu - She proposed to him! I hope he said yes! - Imgur
17:39 <@haroldwu> 成功 =.=
17:39 < a2n> haroldwu: Awesome!!
17:40 <@haroldwu> 你要怎麼重構呢？還是你給點教學，讓我自己試試看？XDD
17:40 < a2n> XD 這該死的什麼圖片啊
17:40 < a2n> :$
17:40 < a2n> 我去看 code.
17:40 <@haroldwu> 目前 imgur 打開的前幾張 XDD
17:41 <@haroldwu> https://gist.github.com/yfwu/8021938
17:41 < bot_tcffm> haroldwu - 簡易的IRC bot。原本的 socket 部分是抄自某網頁的範本（出處我再找）。取得網址分析的部分是我目前試作的成品。
17:41 <@haroldwu> code 在此，這個能 pull request 嗎 XDD
17:41 <@haroldwu> 還是我幫他建個 repo 好了
17:43 < brli> myid.tw掛了= =
17:44 < a2n> haroldwu: re.search(pattern, string, flags=0) 長這樣，但是你的怎麼只有一個參數，要他對什麼抓？
17:45 <@haroldwu> 恩？我不是直接用re.search
17:45 <@haroldwu> 使用 re.compile() 建立一個過濾器，再用 regex.search
17:46 <@haroldwu> 過濾器 regex
17:46 <@haroldwu> 不過如果可以這樣的話，那就不用在多一個 regex 物件啦 XDD
17:48 <@haroldwu>  return re.search('<title>([\s\S]*)</title>', urllib2.urlopen(url).read().replace('\n','')).group()[7:-8].strip()
17:48 < a2n> 你的 code 最大的問題就是，之後不知道怎麼讀碼。你需要多行拆解，加上註解說明動作。這樣日後容易維護。
17:49 < a2n> 一行看起來很屌，但是你不會把屌拿給同事或當產品展示。還是做個合適的代碼樣子，重構。
17:50 <@haroldwu> 好吧 QQ
17:50 < guildwar> brli: XD，真的耶，是不是最近有比較多人用了
17:51 < guildwar> 這樣也太弱了吧
17:51 <@haroldwu> http://imgur.com/gallery/d0Unc3s
17:51 < bot_tcffm> haroldwu - She proposed to him! I hope he said yes! - Imgur
17:51 < botexp_tcffm> haroldwu - She proposed to him! I hope he said yes! - Imgur
17:52 <@haroldwu> 恩，不宣告物件的 re 也可運行，那這樣 ok
17:52 < brli> 用openid登入的壞處就是來源伺服器掛了以後就無法登入啦XDDD
17:53 < guildwar> 還好還有 persona :)
17:53 < a2n> haroldwu: 可以讓我看看代碼樣子嗎？
17:55 < a2n> haroldwu: http://pastebin.com/c7quSsV4 我寫了一個不標準的 python code，重構後大概長這樣
17:55 < bot_tcffm> a2n - [Python] refeactoring title fetcher - Pastebin.com
17:55 < botexp_tcffm> a2n - [Python] refeactoring title fetcher - Pastebin.com
17:55 < brli> 兩個bot=.=
17:55 < a2n> botexp_tcffm: botexp_tcffm 看得出來你們兩個網速的差別
17:55 < botexp_tcffm> a2n 我是你的好朋友，一隻機器人
17:56 < a2n> botexp_tcffm: 我不認識你，別半路隨便搭訕。
17:56 < botexp_tcffm> a2n 我是你的好朋友，一隻機器人
17:56  * a2n botexp_tcffm 鸚鵡
17:56 < botexp_tcffm> a2n 我是你的好朋友，一隻機器人
17:57 < brli> botexp_tcffm: 你好
17:57 < botexp_tcffm> brli 我是你的好朋友，一隻機器人
17:57 < brli> botexp_tcffm: help
17:57 < botexp_tcffm> brli 我是你的好朋友，一隻機器人
17:57 < brli> !help
17:57 < brli> 毫無反應就只是隻鸚鵡ˊ_>ˋ
17:59 <@haroldwu> 扣掉空白行剩不到 80 行，體諒下XDD
18:00 <@haroldwu> a2n 你的機器有 fortune 嗎？
18:00 <@haroldwu> 我可以讓他回覆 fortune 的句子
18:00 < a2n> haroldwu: python module?
18:00 <@haroldwu> 沒，一般程式啊
18:01 < a2n> haroldwu: 正在安裝，你幫你加入 sudo 了，以後可以自己裝。
18:02  * a2n tw.archive.ubuntu.com time out. :(
18:02  * a2n 離
18:04 <@haroldwu> 我想到一個更好玩的了
18:04 <@haroldwu> 去讀 irc log，然後隨機播一句
18:06 <@haroldwu> a2n: 看了你的 code，商業用的代碼都長這樣噢 @@
18:06 <@haroldwu> 寫起來好累...QQ
18:07 <@haroldwu> 雖然維護的時候就會笑了 XDD
18:07  * haroldwu 至今都是寫一次性代碼居多
18:14 < brli> 商業用代碼聽起來就好強大XD
18:23 <@haroldwu> http://imgur.com/gallery/d0Unc3s
18:23 < bot_tcffm> haroldwu - She proposed to him! I hope he said yes! - Imgur
18:23 < botexp_tcffm> haroldwu - She proposed to him! I hope he said yes! - Imgur
18:24 <@haroldwu> 恩，簡單加了點說明 + 拆成兩行
18:27 <@haroldwu> http://hornydragon.blogspot.com/2013/12/372.html
18:27 < bot_tcffm> haroldwu - 好色龍的網路生活觀察日誌: 雜七雜八短篇漫畫翻譯372
19:13 < haroldwu_> http://bit.ly/tcffm-irc-logs
19:13 < bot_tcffm> haroldwu_ - TCFFM forum IRC Chat Logs for index
20:30 < a2n> haroldwu: 這次案例是維護性展示，我撰碼的習慣會隨時說明，深怕自己以後看不懂。
20:31 < a2n> 最常加的應該是 TODO, FIXME, XXX editor 會將此記號亮光
20:33 <@haroldwu> XXX 是什麼？
20:34 <@haroldwu> http://devdocs.io/
20:34 < bot_tcffm> haroldwu - DevDocs — API Documentation Browser
